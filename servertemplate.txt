// List of Dependencies
const path = require("path");
const fs = require("fs");
const util = require("util");
const express = require("express");


//Async Processes
//Promisify the fs.writefile/fs.readfile
const writeAsync = util.promisify(fs.writeFile);
const readAsync = util.promisify(fs.readFile);


//Set up the Server
const app = express();
const PORT = process.env.PORT || 3000;

//middleware goes here
app.use(express.json());
app.use(express.urlencoded({ extended: true}));
app.use(express.static("public"));


//Middleware(static)
app.use(express.static('./develop/public'));

//API Routes = *API----------------------------------------


//"GET" request *API
app.get("/api/notes", (req, res) => {
    res.sendFile(path.join(__dirname, "/db/db.json"))
});

//"POST" request *API
app.post("/api/notes", (req, res) => {
    const notes = JSON.parse(fs.readFileSync("./db/db.json"));
    const newNotes = req.body;
    newNotes.id = uuid.v4();
    notes.push(newNotes);
    fs.writeFileSync("./db/db.json", JSON.stringify(notes))
    res.json(notes);
});
//"DELETE" request *API
app.delete("/api/notes/:id", (req, res) => {
    const notes = JSON.parse(fs.readFileSync("./db/db.json"));
    const deleteNote = notes.filter((rmvNote) => rmvNote.id !== req.params.id);
    fs.writeFileSync("./db/db.json", JSON.stringify(deleteNote));
    res.json(deleteNote);
})
//END OF API ROUTES----------------------------------------

//HTML Routes
//home route
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, "/public/index.html"));
});

// notes route
app.get("/notes", function (req, res) {
    res.sendFile(path.join(__dirname, "/public/notes.html"));
});
//App Listening
app.listen(PORT, function(){
    console.log("App listening on port" + PORT)
});